"use client"

import React, { useState, useEffect } from "react"
import { PDFDownloadLink, Document, Page, Text, View, StyleSheet } from "@react-pdf/renderer"
import { Button } from "@/components/ui/button"

const styles = StyleSheet.create({
  page: { fontSize: 12, padding: 30, color: "#333" },
  section: { marginBottom: 20 },
  header: { fontSize: 24, marginBottom: 10, textAlign: "center", fontWeight: "bold", color: "#2c7a7b" },
  title: { fontSize: 18, marginBottom: 6, fontWeight: "bold", borderBottomWidth: 1, borderBottomColor: "#ccc", paddingBottom: 3 },
  label: { fontWeight: "bold" },
  row: { flexDirection: "row", justifyContent: "space-between", marginBottom: 4 },
  footer: { marginTop: 40, textAlign: "center", fontSize: 10, color: "#888" },
})

interface Payment {
  PaymentsID: number
  S_RegisterID: string
  S_FullName: string
  Supplier_Loan_Amount: number
  Supplier_Advance_Amount: number
  TeaPackets_Fertilizers_Amount: number
  Transport_Charge: number
  Final_Total_Salary: number
  Date: string
  Status: string
}

interface Props {
  payment: Payment
}

// PDF document definition component
const MyDocument = ({ payment }: { payment: Payment }) => (
  <Document>
    <Page size="A4" style={styles.page}>
      <View style={styles.section}>
        <Text style={styles.header}>Payment Receipt</Text>
      </View>

      <View style={styles.section}>
        <Text style={styles.title}>Supplier Details</Text>
        <View style={styles.row}>
          <Text style={styles.label}>Supplier Name:</Text>
          <Text>{payment.S_FullName}</Text>
        </View>
        <View style={styles.row}>
          <Text style={styles.label}>Supplier ID:</Text>
          <Text>{payment.S_RegisterID}</Text>
        </View>
        <View style={styles.row}>
          <Text style={styles.label}>Payment Date:</Text>
          <Text>{payment.Date ? new Date(payment.Date).toLocaleDateString() : "-"}</Text>
        </View>
        <View style={styles.row}>
          <Text style={styles.label}>Payment Status:</Text>
          <Text>{payment.Status}</Text>
        </View>
      </View>

      <View style={styles.section}>
        <Text style={styles.title}>Payment Breakdown</Text>
        <View style={styles.row}>
          <Text>Loan Amount:</Text>
          <Text>Rs. {payment.Supplier_Loan_Amount.toLocaleString()}</Text>
        </View>
        <View style={styles.row}>
          <Text>Advance Amount:</Text>
          <Text>Rs. {payment.Supplier_Advance_Amount.toLocaleString()}</Text>
        </View>
        <View style={styles.row}>
          <Text>Tea & Fertilizer Amount:</Text>
          <Text>Rs. {payment.TeaPackets_Fertilizers_Amount.toLocaleString()}</Text>
        </View>
        <View style={styles.row}>
          <Text>Transport Charge:</Text>
          <Text>Rs. {payment.Transport_Charge.toLocaleString()}</Text>
        </View>
        <View style={{ ...styles.row, marginTop: 10, borderTopWidth: 1, borderTopColor: "#333", paddingTop: 5 }}>
          <Text style={{ fontWeight: "bold" }}>Final Total Salary:</Text>
          <Text style={{ fontWeight: "bold" }}>Rs. {payment.Final_Total_Salary.toLocaleString()}</Text>
        </View>
      </View>

      <Text style={styles.footer}>
        Thank you for your business!{"\n"}
        This is an autogenerated receipt from your Finance Management System.
      </Text>
    </Page>
  </Document>
)

const PaymentReceiptClient: React.FC<Props> = ({ payment }) => {
  // Workaround: Only render PDFDownloadLink after mount to avoid SSR issues
  const [mounted, setMounted] = useState(false)
  useEffect(() => setMounted(true), [])

  return (
    <div className="p-6 max-w-3xl mx-auto space-y-6">
      <h1 className="text-2xl font-bold mb-4">Payment Receipt - #{payment.PaymentsID}</h1>

      <div className="bg-white shadow rounded p-6 space-y-4">
        <p><strong>Supplier Name:</strong> {payment.S_FullName}</p>
        <p><strong>Supplier ID:</strong> {payment.S_RegisterID}</p>
        <p><strong>Date:</strong> {payment.Date ? new Date(payment.Date).toLocaleDateString() : "-"}</p>
        <p><strong>Status:</strong> {payment.Status}</p>

        <hr />

        <p><strong>Loan Amount:</strong> Rs. {payment.Supplier_Loan_Amount.toLocaleString()}</p>
        <p><strong>Advance Amount:</strong> Rs. {payment.Supplier_Advance_Amount.toLocaleString()}</p>
        <p><strong>Tea & Fertilizer Amount:</strong> Rs. {payment.TeaPackets_Fertilizers_Amount.toLocaleString()}</p>
        <p><strong>Transport Charge:</strong> Rs. {payment.Transport_Charge.toLocaleString()}</p>

        <hr />

        <p className="text-lg font-semibold">
          Final Total Salary: Rs. {payment.Final_Total_Salary.toLocaleString()}
        </p>
      </div>

      {mounted ? (
        <PDFDownloadLink document={<MyDocument payment={payment} />} fileName={`Payment_Receipt_${payment.PaymentsID}.pdf`}>
          {({ loading, error }) =>
            loading ? (
              <Button disabled>Preparing PDF...</Button>
            ) : error ? (
              <Button disabled>Error loading PDF</Button>
            ) : (
              <Button>Download PDF Receipt</Button>
            )
          }
        </PDFDownloadLink>
      ) : (
        <Button disabled>Preparing PDF...</Button>
      )}
    </div>
  )
}

export default PaymentReceiptClient
